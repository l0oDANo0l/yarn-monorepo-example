# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1



# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  build-main-cache:
    docker:
      - image: cimg/node:16.13
    steps:
      - checkout
      - run: yarn install
      - save_cache:
          key: c-yarn-main
          paths:
            - .yarn/cache
            - .yarn/build-state.yml
            - .yarn/install-state.gz
            - node_modules
  
  build-branch:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/node:16.13
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          key: c-yarn-main
      - restore_cache:
          key: c-yarn-branch
      - run: yarn install
      - save_cache:
          key: c-yarn-<< pipeline.git.branch >>
          paths:
            - node_modules
      - run: yarn workspace frontend build
      - save_cache:
          key: c-build-<< pipeline.git.branch >>
          paths:
            - frontend
            - backend
            - packages
            - package.json
            - node_modules
  
  test-branch:
    docker:
      - image: cimg/node:16.13
    steps:
      - restore_cache:
          key: c-yarn-<< pipeline.git.branch >>
      - restore_cache:
          key: c-build-<< pipeline.git.branch >>
      - run: yarn start


     

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:

  build-main-flow:
    jobs:
      - build-main-cache:
          filters:
            branches:
              only: main

  test-branch-flow:
    jobs:
      - build-branch:
          filters:
            branches:
              ignore: main
      - test-branch:
          requires:
            - build-branch
        
